package PostProcessors;

import Common.ColorOutput;
import Common.FeatureList;
import LightDJGUI.GenericKnob;

/**
 * A post processor that takes care of white strobes, uv strobes, and strobe scattering effects.
 * @author steve
 *
 */
public class Strobes extends PostProcessor {

	protected GenericKnob lengthKnob;
	protected boolean active;
	protected int strobeFrame;
	protected int strobeFrameLength;
	
	// Scatter strobes information
	double triggerValLast;
	protected long[] scatterStrobes = new long[ColorOutput.NUM_UVWHITE_PANELS];
	protected long scatterTimeLength = 100; // milliseconds
	protected int lastScatterStrobe = -1;
	
	public Strobes(double updatesPerSecond) {
		super(updatesPerSecond);
		triggerValLast = 0.0;
	}

	@Override
	public String getName() {
		return "Strobes";
	}

	@Override
	public void init() {
		
		strobeFrame = 0;
		strobeFrameLength = 8;
		
	}

	@Override
	public void postProcess(ColorOutput colorOutput, FeatureList featureList) {
		
		
		double triggerVal = ((Double) featureList.getFeature("KEY_[")) + ((Double) featureList.getFeature("KEY_]"));
		if (triggerVal > triggerValLast) {
			// Trigger a random scatter strobe!
			int strobe = (int) (ColorOutput.NUM_UVWHITE_PANELS * Math.random());
			
			
		}
		triggerValLast = triggerVal;
		
		
		if (((Double) featureList.getFeature("KEY_F12")) == 1.0) {
			active = true;
		} else {
			active = false;
			strobeFrame = 0;
		}
		
		if (active) {
			if (strobeFrame == 0) {
				colorOutput.setWhiteStrobe();
			} else {
				colorOutput.allOff();
			}
			strobeFrame = (strobeFrame + 1) % strobeFrameLength;
		}

	}

	@Override
	public boolean isActive() {
		// TODO Auto-generated method stub
		return active;
	}


}
