# LightDJ Configuration File - gEt ReAdY tO rOcK! :-D
#
# This file specifies various parameters and configuration setttings for use
# with the LightDJ software. For examnple, use this file to specify the number
# of lights, audio sources, serial ports for output, etc. All lines are of the
# form KEY = value (case insensitive for the key). Lines that begin with a # are
# comments. If a setting is not specified, it will be automagically set to a
# reasonable default value.

###############################################################################
##
## Lighting system settings
##
###############################################################################

# The number of different types of panels we have
NUM_FRONT_RGB_PANELS = 8
NUM_REAR_RGB_PANELS = 8
NUM_UVWHITE_PANELS = 8
NUM_LEDS_PER_RGB_BOARD = 4

# The starting addresses for rear and UVwhite PANELS when being individually addressed 
# (function of the firmware), Please note that each front and rear panel
# consists of a group of 4 LED's. Historically, these values were chosen for 8
# front and rear panels, but will work fine for less than that too.
START_REAR_PANEL_ADDRESSES = 8
START_UVWHITE_PANEL_ADDRESSES = 16 

###############################################################################
##
## Serial communication settings
##
##############################################################################

# Select serial port settings here for communication with the lighting system.
# Uncomment the proper group of lines, or edit for your own system's settings.

## The following settings work great for the wired Next House Party Lighting system:
#SERIAL_PORT_NAME = /dev/ttyUSB0
#OR
#SERIAL_PORT_NAME = COM7
#SERIAL_BAUDRATE = 38400
#OR
#SERIAL_BAUDRATE = 115200
#SERIAL_DATABITS = 8
#SERIAL_STOPBITS = 1
#SERIAL_PARITY = 2

## The following settings work great for an Arduino Uno-based system:
#SERIAL_PORT_NAME = /dev/ttyACM0
#SERIAL_BAUDRATE = 115200
#SERIAL_DATABITS = 8
#SERIAL_STOPBITS = 1
#SERIAL_PARITY = 0

## The following settings work great for wireless via Xbee:
## (note that setting 2 stop bits here and 1 stop bit on the Xbee
## configuration is a hack to account for the clock difference between
## the Xbee (16MHz) and a regular UART)
SERIAL_PORT_NAME = /dev/ttyUSB0
SERIAL_BAUDRATE = 115200
SERIAL_DATABITS = 8
SERIAL_STOPBITS = 2
SERIAL_PARITY = 0


###############################################################################
##
##  Audio / visual settings
##
###############################################################################
# USE_CAPTURED_AUDIO - if true, captures live audio from an external input.
# if false, loads audio from a WAV file as specified in WAV_FILE_NAME.
# WAV_FILE_NAME is ignored if CAPTURED_AUDIO = TRUE
USE_CAPTURED_AUDIO = TRUE
WAV_FILE_NAME = /home/steve/Desktop/04 Troublemaker.wav
# AUDIO_PASS_THROUGH - if true, plays the received sound through the speakers.
# Set to true if you're hooking an iPod/MP3 player up to your computer and want
# to connect the computer to the speakers to here sound. If you use a separate
# audio splitter cable (i.e., at a Next House party for example!), set to false.
AUDIO_PASS_THROUGH = FALSE

###############################################################################
##
## MIDI Controller settings 
##
###############################################################################
# The LightDJ software supports using an external MIDI controller to
# control the software! The LightDJ software listens to short MIDI messages
# from all plugged-in controllers (including USB MIDI). Each MIDI short message
# contains a command (ex., control change, note on, etc.), a track/channel that
# it applies to (ex. channel 25), and a value between 0 and 127 (ex., 127).
# MIDI channels are mapped IN ORDER via the following lines. For example, the
# line
#     MIDI_LEFT_PLUGIN_CHANNELS = 3, 8, 9
# means that MIDI events for channel 3 will control the first knob on the left
# plugin, channel 8 will control the second knob, etc.
# 
# An easy way to figure out what channels the knobs on your midi controller
# sends to is to run the MidiTest.java file, which will echo all short MIDI
# events to the terminal/console. You can also use some music software to record
# MIDI events and play them back if you want.

# The following values have been determined experimentally via MidiTest.java for
# an M-Audio X Session Pro USB MIDI Controller
#MIDI_LEFT_PLUGIN_CHANNELS = 24, 27, 25, 28, 26, 29, 44, 46, 43, 70, 58
#MIDI_RIGHT_PLUGIN_CHANNELS = 34, 31, 35, 32, 36, 33, 45, 56, 57, 69, 59
#MIDI_GENERAL_SLIDER_CHANNELS = 12, 11, 14, 15
#MIDI_CROSSFADER_CHANNEL = 17
# Various buttons
#MIDI_BUTTONS = 44, 45, 70, 58, 59, 59
#MIDI_VISUALIZER_BUTTONS = 46, 43, 56, 57

#These values are for the Alesis QX25 controller
MIDI_CROSSFADER_CHANNEL = 22
MIDI_LEFT_PLUGIN_CHANNELS = 14, 15, 16, 17
MIDI_RIGHT_PLUGIN_CHANNELS = 18, 19, 20, 21
MIDI_GENERAL_SLIDER_CHANNELS = 1
MIDI_VISUALIZER_BUTTONS = 60, 61, 62, 63, 64
MIDI_PIANO_BUTTONS = 53, 55, 57, 59, 65, 67, 69, 71
MIDI_SPECIAL_BUTTONS = 48, 49, 50, 51


###############################################################################
##
## User Interface Settings 
##
###############################################################################
# The following settings allow you to customize how LightDJ appears 
# on your computer!
#
# DPI_MULTIPLIER allows you to enlarge (or shrink) all elements on the screen.
# The default value is 1.0, and   that works well for most normal screens. If you
# have a high resolution screen (also known as Hi-DPI, or Retina display, etc.),
# then you might want to try a higher DPI settings, such as 1.5 to 2.0. That 
# will make all text, icons, and visualizations larger (but still nice and 
# crisp!) on your screen. Conversely, if you have a low res screen and don't
# want everything to look huge, try a value between 0.5 and 1.0.
DPI_MULTIPLIER = 1.0 


